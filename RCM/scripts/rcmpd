#! /bin/sh
### BEGIN INIT INFO
# Provides:          rcmpd
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/stop RCMPlatformNode
# Description:       This script will start RCMPlatformNode for the
#                    management of the robotic platform
### END INIT INFO

# Author: Fabio Giuseppe Di Benedetto <fabio.dibenedetto@consoft.it>

DIR=/usr/local/bin
DAEMON=$DIR/rcmp_n
DAEMON_NAME=rcmpd

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

. /lib/lsb/init-functions

do_start () {
	log_daemon_msg "Starting system $DAEMON_NAME daemon"
	# used for avoid error: terminate called after throwing an instance
	# of 'std::runtime_error' what(): locale::facet::_S_create_c_locale
	# name not valid
	export LC_ALL=C
	# the following 2 variables are used to enable the root user who
	# launches this script at boot or in sudo service rcmpd start to
	# use graphical interfaces in the processes launched after that
	# (in its children and so in the ros nodes launched by the RCM platform)
	export DISPLAY=:0
	<INSTALLER_XAUTHORITY>
	<ROS_SETUP>
	<RCMP_WS_SETUP>
	export ROSCONSOLE_CONFIG_FILE=/opt/rcm-platform/ros/rosconsole.config
	export PYTHONUNBUFFERED=True
	start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS
	log_end_msg $?
}

do_stop () {
	log_daemon_msg "Stopping system $DAEMON_NAME daemon"
	start-stop-daemon --stop --pidfile $PIDFILE --retry 10
	log_end_msg $?
}

case "$1" in
	start|stop)
		do_${1}
		;;
	restart|reload|force-reload)
		do_stop
		do_start
		;;
	status)
		status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
		;;
	*)
		echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
		exit 1
		;;
esac
exit 0
